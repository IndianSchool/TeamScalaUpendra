Scala:


Why Scala?
	=> SCAlable LAnguage

 How a language can be scaled? Is it with paradigm?
	1. Procedural  -> top to bottom ; c
  2. Declarative -> SELECT ; sql; regex
  3. OOPS -> real world -> cycle c;
  4. Imperative -> understandable -> int i , j; k = i + j ; print(k);
  5. Functional -> have functions -> scientific methods
				f(x) -> 2x
				g(x) -> 2+3x
					h(x) -> g(f(x))
R, Scala(oops + functional), Python
					select lower(upper(name)) from stable;
						String name;
									name.upper().lower()
							dofunc(sum(),a,b);
   						dofunc(sub(),a, b);

Functional programming: functions on steroids
		we pass function as a parameter, like logic as a parameter, not only for return type

Dofunc -> applies a, b to sub(); higher level governing function
Sub -> does the subtraction of the parameters; actual work here

——————							

									dofunc(sum(a,b),sub(cod))
  6. Multi Paradigm -> have a mix of above


Java is there before Scala; Scala is a derived language from JAVA.
		Martin Odersky -> cs profession -> scala inventor
				object -> data + method
					int k, j; sum(k,j); -> in java both are in a class -> 
								String s = “Jagadish”;
										String s1 = s.lower();
—————————————
								char[] c = “Jagadish”;
 											lower(c);
   Java got upgraded(modified) -> to get Scala

		You cannot run a Scala program without JVM(JRE/JDK)

			.java => Javac => class file => byte code => JVM => result
      .scala => scalac => class file => byte code => JVM => result


