Hello All, Welcome Back.

Good to see you back;

Drop Box = need to configure; to share the videos.

Earlier Languages: 
	c => only data
	java => data + methods
	scala => data + funtion + object

	In Java, object can hold a value [along with object specific members], String s = "jaga";
		String s1 = s.lower(); returns an object; s has methods; s has[is] value;

	In Scala, function can hold a value [along wiht function specific things], def a = 1 + 2;
		def a = 10;
		def a = {1 + 2} 
		def a = {println("hello"); 1 + 2} 
		def a() = {println("hello"); 1 + 2} 
		def a(i:Int) = {println("hello"); i } 
		def a(i:Int, j:Int) = {println("hello"); i + j} 
		def a(i:Int, j:Int):Int = {println("hello"); i + j} 
		def a(i:Int, j:Int):Unit = {println("hello"); } 
		def a(i:Int, j:Int) {println("hello"); } 

c or java => int i;
scala => reverse => i:int

only in scala these meanings live:
----------------------------------

What is a Procedure => A function without a return type [represented as no eqaul sign] 
 = [()UNIT return] => VOID RETURN => NO return type

What is a Method => function as a member of object/class => function within an object/class

What is "object" => only one object can be made => singleton objects [java way of saying]
		=> only one instance is allowed

What is class => earlier meanings still exist + many objects can be made out of class.

What is a function => an executable code block with a name which can take parameters and return values.

Done with => Call By Value => Type

If "t" is a function, what happens when the control flow executes the below line [or touches t] ?
	
	println("hello" + t)

	What Happens:
	1. t will get executed
	2. t will store the return value of t function

	"It executes and preserves the value of the return type"

Difference between Expression and Equation? 
	=> Eqution has equal sign => a = b+c
	=> Expression has no equal sign => it can "a" or can be "b+c" or can any formula

	Last statement is return value;
		return value must be expression;
			Expression or Literal can become a RETURN value;
				Last statement equation => it fails
				Any statement (but not Last) in body as expression [gives warning]
						=> it passes with a warning

scala> def fn() = {println("hello");10+1;20.2}
<console>:11: warning: a pure expression does nothing in statement position; multiline expressions might require enclosing parentheses
       def fn() = {println("hello");10+1;20.2}
                                      ^
fn: ()Double











































































